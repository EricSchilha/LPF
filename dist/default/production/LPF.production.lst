

Microchip Technology PIC LITE Macro Assembler V1.44 build -154322312 
                                                                                               Fri Dec 01 17:17:31 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	stringtext1,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.44
    22                           ; Generated 14/09/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC12F1840 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001E                     	;# 
    80  001F                     	;# 
    81  008C                     	;# 
    82  0091                     	;# 
    83  0092                     	;# 
    84  0095                     	;# 
    85  0096                     	;# 
    86  0097                     	;# 
    87  0098                     	;# 
    88  0099                     	;# 
    89  009A                     	;# 
    90  009B                     	;# 
    91  009B                     	;# 
    92  009C                     	;# 
    93  009D                     	;# 
    94  009E                     	;# 
    95  010C                     	;# 
    96  0111                     	;# 
    97  0112                     	;# 
    98  0115                     	;# 
    99  0116                     	;# 
   100  0117                     	;# 
   101  0118                     	;# 
   102  0119                     	;# 
   103  011A                     	;# 
   104  011B                     	;# 
   105  011D                     	;# 
   106  011D                     	;# 
   107  018C                     	;# 
   108  0191                     	;# 
   109  0191                     	;# 
   110  0192                     	;# 
   111  0193                     	;# 
   112  0193                     	;# 
   113  0193                     	;# 
   114  0194                     	;# 
   115  0195                     	;# 
   116  0196                     	;# 
   117  0197                     	;# 
   118  0199                     	;# 
   119  019A                     	;# 
   120  019B                     	;# 
   121  019B                     	;# 
   122  019B                     	;# 
   123  019B                     	;# 
   124  019C                     	;# 
   125  019C                     	;# 
   126  019D                     	;# 
   127  019E                     	;# 
   128  019F                     	;# 
   129  020C                     	;# 
   130  0211                     	;# 
   131  0211                     	;# 
   132  0212                     	;# 
   133  0212                     	;# 
   134  0213                     	;# 
   135  0213                     	;# 
   136  0214                     	;# 
   137  0214                     	;# 
   138  0215                     	;# 
   139  0215                     	;# 
   140  0215                     	;# 
   141  0216                     	;# 
   142  0216                     	;# 
   143  0217                     	;# 
   144  0217                     	;# 
   145  0291                     	;# 
   146  0291                     	;# 
   147  0292                     	;# 
   148  0293                     	;# 
   149  0294                     	;# 
   150  0295                     	;# 
   151  0295                     	;# 
   152  0296                     	;# 
   153  0391                     	;# 
   154  0392                     	;# 
   155  0393                     	;# 
   156  039A                     	;# 
   157  039C                     	;# 
   158  039D                     	;# 
   159  039E                     	;# 
   160  039F                     	;# 
   161  0FE4                     	;# 
   162  0FE5                     	;# 
   163  0FE6                     	;# 
   164  0FE7                     	;# 
   165  0FE8                     	;# 
   166  0FE9                     	;# 
   167  0FEA                     	;# 
   168  0FEB                     	;# 
   169  0FED                     	;# 
   170  0FEE                     	;# 
   171  0FEF                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  008C                     	;# 
   199  0091                     	;# 
   200  0092                     	;# 
   201  0095                     	;# 
   202  0096                     	;# 
   203  0097                     	;# 
   204  0098                     	;# 
   205  0099                     	;# 
   206  009A                     	;# 
   207  009B                     	;# 
   208  009B                     	;# 
   209  009C                     	;# 
   210  009D                     	;# 
   211  009E                     	;# 
   212  010C                     	;# 
   213  0111                     	;# 
   214  0112                     	;# 
   215  0115                     	;# 
   216  0116                     	;# 
   217  0117                     	;# 
   218  0118                     	;# 
   219  0119                     	;# 
   220  011A                     	;# 
   221  011B                     	;# 
   222  011D                     	;# 
   223  011D                     	;# 
   224  018C                     	;# 
   225  0191                     	;# 
   226  0191                     	;# 
   227  0192                     	;# 
   228  0193                     	;# 
   229  0193                     	;# 
   230  0193                     	;# 
   231  0194                     	;# 
   232  0195                     	;# 
   233  0196                     	;# 
   234  0197                     	;# 
   235  0199                     	;# 
   236  019A                     	;# 
   237  019B                     	;# 
   238  019B                     	;# 
   239  019B                     	;# 
   240  019B                     	;# 
   241  019C                     	;# 
   242  019C                     	;# 
   243  019D                     	;# 
   244  019E                     	;# 
   245  019F                     	;# 
   246  020C                     	;# 
   247  0211                     	;# 
   248  0211                     	;# 
   249  0212                     	;# 
   250  0212                     	;# 
   251  0213                     	;# 
   252  0213                     	;# 
   253  0214                     	;# 
   254  0214                     	;# 
   255  0215                     	;# 
   256  0215                     	;# 
   257  0215                     	;# 
   258  0216                     	;# 
   259  0216                     	;# 
   260  0217                     	;# 
   261  0217                     	;# 
   262  0291                     	;# 
   263  0291                     	;# 
   264  0292                     	;# 
   265  0293                     	;# 
   266  0294                     	;# 
   267  0295                     	;# 
   268  0295                     	;# 
   269  0296                     	;# 
   270  0391                     	;# 
   271  0392                     	;# 
   272  0393                     	;# 
   273  039A                     	;# 
   274  039C                     	;# 
   275  039D                     	;# 
   276  039E                     	;# 
   277  039F                     	;# 
   278  0FE4                     	;# 
   279  0FE5                     	;# 
   280  0FE6                     	;# 
   281  0FE7                     	;# 
   282  0FE8                     	;# 
   283  0FE9                     	;# 
   284  0FEA                     	;# 
   285  0FEB                     	;# 
   286  0FED                     	;# 
   287  0FEE                     	;# 
   288  0FEF                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  0011                     	;# 
   303  0012                     	;# 
   304  0015                     	;# 
   305  0016                     	;# 
   306  0016                     	;# 
   307  0017                     	;# 
   308  0018                     	;# 
   309  0019                     	;# 
   310  001A                     	;# 
   311  001B                     	;# 
   312  001C                     	;# 
   313  001E                     	;# 
   314  001F                     	;# 
   315  008C                     	;# 
   316  0091                     	;# 
   317  0092                     	;# 
   318  0095                     	;# 
   319  0096                     	;# 
   320  0097                     	;# 
   321  0098                     	;# 
   322  0099                     	;# 
   323  009A                     	;# 
   324  009B                     	;# 
   325  009B                     	;# 
   326  009C                     	;# 
   327  009D                     	;# 
   328  009E                     	;# 
   329  010C                     	;# 
   330  0111                     	;# 
   331  0112                     	;# 
   332  0115                     	;# 
   333  0116                     	;# 
   334  0117                     	;# 
   335  0118                     	;# 
   336  0119                     	;# 
   337  011A                     	;# 
   338  011B                     	;# 
   339  011D                     	;# 
   340  011D                     	;# 
   341  018C                     	;# 
   342  0191                     	;# 
   343  0191                     	;# 
   344  0192                     	;# 
   345  0193                     	;# 
   346  0193                     	;# 
   347  0193                     	;# 
   348  0194                     	;# 
   349  0195                     	;# 
   350  0196                     	;# 
   351  0197                     	;# 
   352  0199                     	;# 
   353  019A                     	;# 
   354  019B                     	;# 
   355  019B                     	;# 
   356  019B                     	;# 
   357  019B                     	;# 
   358  019C                     	;# 
   359  019C                     	;# 
   360  019D                     	;# 
   361  019E                     	;# 
   362  019F                     	;# 
   363  020C                     	;# 
   364  0211                     	;# 
   365  0211                     	;# 
   366  0212                     	;# 
   367  0212                     	;# 
   368  0213                     	;# 
   369  0213                     	;# 
   370  0214                     	;# 
   371  0214                     	;# 
   372  0215                     	;# 
   373  0215                     	;# 
   374  0215                     	;# 
   375  0216                     	;# 
   376  0216                     	;# 
   377  0217                     	;# 
   378  0217                     	;# 
   379  0291                     	;# 
   380  0291                     	;# 
   381  0292                     	;# 
   382  0293                     	;# 
   383  0294                     	;# 
   384  0295                     	;# 
   385  0295                     	;# 
   386  0296                     	;# 
   387  0391                     	;# 
   388  0392                     	;# 
   389  0393                     	;# 
   390  039A                     	;# 
   391  039C                     	;# 
   392  039D                     	;# 
   393  039E                     	;# 
   394  039F                     	;# 
   395  0FE4                     	;# 
   396  0FE5                     	;# 
   397  0FE6                     	;# 
   398  0FE7                     	;# 
   399  0FE8                     	;# 
   400  0FE9                     	;# 
   401  0FEA                     	;# 
   402  0FEB                     	;# 
   403  0FED                     	;# 
   404  0FEE                     	;# 
   405  0FEF                     	;# 
   406                           
   407                           	psect	idataBANK0
   408  060B                     __pidataBANK0:	
   409                           
   410                           ;initializer for _LPFInput
   411  060B  3480               	retlw	128
   412  060C  3480               	retlw	128
   413  060D  3480               	retlw	128
   414  060E  3480               	retlw	128
   415  060F  3480               	retlw	128
   416  0610  3480               	retlw	128
   417  0611  3480               	retlw	128
   418  0612  3480               	retlw	128
   419  0613  3480               	retlw	128
   420  0614  3480               	retlw	128
   421                           
   422                           ;initializer for _green
   423  0615  3440               	retlw	64
   424                           
   425                           	psect	stringtext1
   426  0800                     __pstringtext1:	
   427  0800                     _maxLEDs:	
   428  0800  341E               	retlw	30
   429  0801                     __end_of_maxLEDs:	
   430  000B                     _INTCON	set	11
   431  000C                     _PORTA	set	12
   432  009C                     _ADRESH	set	156
   433  0097                     _WDTCON	set	151
   434  008C                     _TRISA	set	140
   435  009E                     _ADCON1	set	158
   436  009D                     _ADCON0	set	157
   437  0095                     _OPTION_REG	set	149
   438  0099                     _OSCCON	set	153
   439  04E9                     _GO	set	1257
   440  04E8                     _ADON	set	1256
   441  04D6                     _PLLR	set	1238
   442  010C                     _LATA	set	268
   443  018C                     _ANSELA	set	396
   444  020C                     _WPUA	set	524
   445                           
   446                           ; #config settings
   447  0000                     
   448                           	psect	cinit
   449  07E9                     start_initialization:	
   450  07E9                     __initialization:	
   451                           
   452                           ; Initialize objects allocated to BANK0
   453  07E9  300B               	movlw	low __pidataBANK0
   454  07EA  0084               	movwf	4
   455  07EB  3086               	movlw	(high __pidataBANK0)| (0+128)
   456  07EC  0085               	movwf	5
   457  07ED  303B               	movlw	low __pdataBANK0
   458  07EE  0086               	movwf	6
   459  07EF  3000               	movlw	high __pdataBANK0
   460  07F0  0087               	movwf	7
   461  07F1  300B               	movlw	11
   462  07F2  3186  2605  3187   	fcall	init_ram
   463                           
   464                           ; Clear objects allocated to COMMON
   465  07F5  01FD               	clrf	__pbssCOMMON& (0+127)
   466                           
   467                           ; Clear objects allocated to BANK0
   468  07F6  302E               	movlw	low __pbssBANK0
   469  07F7  0084               	movwf	4
   470  07F8  3000               	movlw	high __pbssBANK0
   471  07F9  0085               	movwf	5
   472  07FA  300D               	movlw	13
   473  07FB  3185  25FF         	fcall	clear_ram0
   474  07FD                     end_of_initialization:	
   475                           ;End of C runtime variable initialization code
   476                           
   477  07FD                     __end_of__initialization:	
   478  07FD  0020               	movlb	0
   479  07FE  3187  2F16         	ljmp	_main	;jump to C main() function
   480                           
   481                           	psect	bssCOMMON
   482  007D                     __pbssCOMMON:	
   483  007D                     _i:	
   484  007D                     	ds	1
   485                           
   486                           	psect	bssBANK0
   487  002E                     __pbssBANK0:	
   488  002E                     _temp:	
   489  002E                     	ds	1
   490  002F                     _tempBlue:	
   491  002F                     	ds	1
   492  0030                     _tempGreen:	
   493  0030                     	ds	1
   494  0031                     _tempRed:	
   495  0031                     	ds	1
   496  0032                     _blue:	
   497  0032                     	ds	1
   498  0033                     _red:	
   499  0033                     	ds	1
   500  0034                     _max4:	
   501  0034                     	ds	1
   502  0035                     _max3:	
   503  0035                     	ds	1
   504  0036                     _max2:	
   505  0036                     	ds	1
   506  0037                     _max1:	
   507  0037                     	ds	1
   508  0038                     _tempIN:	
   509  0038                     	ds	1
   510  0039                     _LPFAvg:	
   511  0039                     	ds	1
   512  003A                     _lastVal:	
   513  003A                     	ds	1
   514                           
   515                           	psect	dataBANK0
   516  003B                     __pdataBANK0:	
   517  003B                     _LPFInput:	
   518  003B                     	ds	10
   519  0045                     _green:	
   520  0045                     	ds	1
   521                           
   522                           	psect	inittext
   523  0605                     init_ram:	
   524  0605  00FE               	movwf	126
   525  0606                     initloop:	
   526  0606  0012               	moviw fsr0++
   527  0607  001E               	movwi fsr1++
   528  0608  0BFE               	decfsz	126,f
   529  0609  2E06               	goto	initloop
   530  060A  3400               	retlw	0
   531                           
   532                           	psect	clrtext
   533  05FF                     clear_ram0:	
   534                           ;	Called with FSR0 containing the base address, and
   535                           ;	WREG with the size to clear
   536                           
   537  05FF  0064               	clrwdt	;clear the watchdog before getting into this loop
   538  0600                     clrloop0:	
   539  0600  0180               	clrf	0	;clear RAM location pointed to by FSR
   540  0601  3101               	addfsr 0,1
   541  0602  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   542  0603  2E00               	goto	clrloop0	;have we reached the end yet?
   543  0604  3400               	retlw	0	;all done for this memory range, return
   544                           
   545                           	psect	cstackCOMMON
   546  0070                     __pcstackCOMMON:	
   547  0070                     ?_init:	
   548  0070                     ??_init:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_adConvert:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_adConvert:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_main:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?___awdiv:	
   561                           ; 2 bytes @ 0x0
   562                           
   563  0070                     adConvert@chan:	
   564                           ; 2 bytes @ 0x0
   565                           
   566  0070                     ___awdiv@divisor:	
   567                           ; 1 bytes @ 0x0
   568                           
   569                           
   570                           ; 2 bytes @ 0x0
   571  0070                     	ds	2
   572  0072                     ___awdiv@dividend:	
   573                           
   574                           ; 2 bytes @ 0x2
   575  0072                     	ds	2
   576  0074                     ??___awdiv:	
   577                           
   578                           ; 1 bytes @ 0x4
   579  0074                     	ds	1
   580  0075                     ___awdiv@counter:	
   581                           
   582                           ; 1 bytes @ 0x5
   583  0075                     	ds	1
   584  0076                     ___awdiv@sign:	
   585                           
   586                           ; 1 bytes @ 0x6
   587  0076                     	ds	1
   588  0077                     ___awdiv@quotient:	
   589                           
   590                           ; 2 bytes @ 0x7
   591  0077                     	ds	2
   592  0079                     ?_lights:	
   593  0079                     lights@leds:	
   594                           ; 1 bytes @ 0x9
   595                           
   596                           
   597                           ; 1 bytes @ 0x9
   598  0079                     	ds	1
   599  007A                     ??_lights:	
   600                           
   601                           ; 1 bytes @ 0xA
   602  007A                     	ds	3
   603                           
   604                           	psect	cstackBANK0
   605  0020                     __pcstackBANK0:	
   606  0020                     _lights$65:	
   607                           
   608                           ; 2 bytes @ 0x0
   609  0020                     	ds	2
   610  0022                     lights@height:	
   611                           
   612                           ; 1 bytes @ 0x2
   613  0022                     	ds	1
   614  0023                     ??_main:	
   615                           
   616                           ; 1 bytes @ 0x3
   617  0023                     	ds	9
   618  002C                     _main$73:	
   619                           
   620                           ; 2 bytes @ 0xC
   621  002C                     	ds	2
   622                           
   623                           	psect	maintext
   624  0716                     __pmaintext:	
   625 ;;
   626 ;;Main: autosize = 0, tempsize = 9, incstack = 0, save=0
   627 ;;
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 88 in file "RAINBO-LPF.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  2  105[None  ] int 
   637 ;; Registers used:
   638 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : B1F/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   644 ;;      Params:         0       0       0       0
   645 ;;      Locals:         0       2       0       0
   646 ;;      Temps:          0       9       0       0
   647 ;;      Totals:         0      11       0       0
   648 ;;Total ram usage:       11 bytes
   649 ;; Hardware stack levels required when called:    2
   650 ;; This function calls:
   651 ;;		___awdiv
   652 ;;		_adConvert
   653 ;;		_init
   654 ;;		_lights
   655 ;; This function is called by:
   656 ;;		Startup code after reset
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _main
   662  0716                     _main:	
   663                           
   664                           ;RAINBO-LPF.c: 89: init();
   665                           
   666                           ;incstack = 0
   667                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   668  0716  3186  262A  3187   	fcall	_init
   669                           
   670                           ;RAINBO-LPF.c: 90: _delay((unsigned long)((200)*(32000000/4000000.0)));
   671  0719  30E4               	movlw	228
   672  071A                     u637:	
   673  071A  3200               	nop2
   674  071B  3200               	nop2
   675  071C  0B89               	decfsz	9,f
   676  071D  2F1A               	goto	u637
   677  071E  3200               	nop2
   678  071F  3200               	nop2
   679  0720                     l891:	
   680                           ;RAINBO-LPF.c: 93: while (1) {
   681                           
   682                           
   683                           ;RAINBO-LPF.c: 94: max1 = 0;
   684  0720  0020               	movlb	0	; select bank0
   685  0721  01B7               	clrf	_max1
   686                           
   687                           ;RAINBO-LPF.c: 95: max2 = 0;
   688  0722  01B6               	clrf	_max2
   689                           
   690                           ;RAINBO-LPF.c: 96: max3 = 0;
   691  0723  01B5               	clrf	_max3
   692                           
   693                           ;RAINBO-LPF.c: 97: max4 = 0;
   694  0724  01B4               	clrf	_max4
   695                           
   696                           ;RAINBO-LPF.c: 98: tempIN = adConvert(0b00000100);
   697  0725  3004               	movlw	4
   698  0726  3186  2616  3187   	fcall	_adConvert
   699  0729  0020               	movlb	0	; select bank0
   700  072A  00A3               	movwf	??_main
   701  072B  0823               	movf	??_main,w
   702  072C  00B8               	movwf	_tempIN
   703                           
   704                           ;RAINBO-LPF.c: 99: if (tempIN > 193) {
   705  072D  30C2               	movlw	194
   706  072E  0238               	subwf	_tempIN,w
   707  072F  1C03               	skipc
   708  0730  2F4B               	goto	l911
   709                           
   710                           ;RAINBO-LPF.c: 100: LPFInput[lastVal] = tempIN;
   711  0731  0838               	movf	_tempIN,w
   712  0732  00A3               	movwf	??_main
   713  0733  083A               	movf	_lastVal,w
   714  0734  3E3B               	addlw	(low (_LPFInput| 0))& (0+255)
   715  0735  0086               	movwf	6
   716  0736  0187               	clrf	7
   717  0737  0823               	movf	??_main,w
   718  0738  0081               	movwf	1
   719                           
   720                           ;RAINBO-LPF.c: 101: lastVal = (lastVal == 9) ? 0 : lastVal + 1;
   721  0739  3009               	movlw	9
   722  073A  063A               	xorwf	_lastVal,w
   723  073B  1903               	btfsc	3,2
   724  073C  2F45               	goto	l907
   725  073D  083A               	movf	_lastVal,w
   726  073E  3E01               	addlw	1
   727  073F  00AC               	movwf	_main$73
   728  0740  3000               	movlw	0
   729  0741  1803               	skipnc
   730  0742  3001               	movlw	1
   731  0743  00AD               	movwf	_main$73+1
   732  0744  2F47               	goto	l909
   733  0745                     l907:	
   734  0745  01AC               	clrf	_main$73
   735  0746  01AD               	clrf	_main$73+1
   736  0747                     l909:	
   737  0747  082C               	movf	_main$73,w
   738  0748  00A3               	movwf	??_main
   739  0749  0823               	movf	??_main,w
   740  074A  00BA               	movwf	_lastVal
   741  074B                     l911:	
   742                           
   743                           ;RAINBO-LPF.c: 102: }
   744                           ;RAINBO-LPF.c: 103: for (i = 0; i < 10; i++) {
   745  074B  01FD               	clrf	_i
   746  074C  300A               	movlw	10
   747  074D  027D               	subwf	_i,w
   748  074E  1803               	btfsc	3,0
   749  074F  2FB0               	goto	l941
   750  0750                     l915:	
   751                           
   752                           ;RAINBO-LPF.c: 104: if (LPFInput[i] > max1) {
   753  0750  087D               	movf	_i,w
   754  0751  3E3B               	addlw	(low (_LPFInput| 0))& (0+255)
   755  0752  0086               	movwf	6
   756  0753  0187               	clrf	7
   757  0754  0801               	movf	1,w
   758  0755  0237               	subwf	_max1,w
   759  0756  1803               	skipnc
   760  0757  2F6C               	goto	l921
   761                           
   762                           ;RAINBO-LPF.c: 105: max4 = max3;
   763  0758  0835               	movf	_max3,w
   764  0759  00A3               	movwf	??_main
   765  075A  0823               	movf	??_main,w
   766  075B  00B4               	movwf	_max4
   767                           
   768                           ;RAINBO-LPF.c: 106: max3 = max2;
   769  075C  0836               	movf	_max2,w
   770  075D  00A3               	movwf	??_main
   771  075E  0823               	movf	??_main,w
   772  075F  00B5               	movwf	_max3
   773                           
   774                           ;RAINBO-LPF.c: 107: max2 = max1;
   775  0760  0837               	movf	_max1,w
   776  0761  00A3               	movwf	??_main
   777  0762  0823               	movf	??_main,w
   778  0763  00B6               	movwf	_max2
   779                           
   780                           ;RAINBO-LPF.c: 108: max1 = LPFInput[i];
   781  0764  087D               	movf	_i,w
   782  0765  3E3B               	addlw	(low (_LPFInput| 0))& (0+255)
   783  0766  0086               	movwf	6
   784  0767  0187               	clrf	7
   785  0768  0801               	movf	1,w
   786  0769  00A3               	movwf	??_main
   787  076A  0823               	movf	??_main,w
   788  076B  00B7               	movwf	_max1
   789  076C                     l921:	
   790                           
   791                           ;RAINBO-LPF.c: 109: }
   792                           ;RAINBO-LPF.c: 110: if (LPFInput[i] > max2) {
   793  076C  087D               	movf	_i,w
   794  076D  3E3B               	addlw	(low (_LPFInput| 0))& (0+255)
   795  076E  0086               	movwf	6
   796  076F  0187               	clrf	7
   797  0770  0801               	movf	1,w
   798  0771  0236               	subwf	_max2,w
   799  0772  1803               	skipnc
   800  0773  2F84               	goto	l927
   801                           
   802                           ;RAINBO-LPF.c: 111: max4 = max3;
   803  0774  0835               	movf	_max3,w
   804  0775  00A3               	movwf	??_main
   805  0776  0823               	movf	??_main,w
   806  0777  00B4               	movwf	_max4
   807                           
   808                           ;RAINBO-LPF.c: 112: max3 = max2;
   809  0778  0836               	movf	_max2,w
   810  0779  00A3               	movwf	??_main
   811  077A  0823               	movf	??_main,w
   812  077B  00B5               	movwf	_max3
   813                           
   814                           ;RAINBO-LPF.c: 113: max2 = LPFInput[i];
   815  077C  087D               	movf	_i,w
   816  077D  3E3B               	addlw	(low (_LPFInput| 0))& (0+255)
   817  077E  0086               	movwf	6
   818  077F  0187               	clrf	7
   819  0780  0801               	movf	1,w
   820  0781  00A3               	movwf	??_main
   821  0782  0823               	movf	??_main,w
   822  0783  00B6               	movwf	_max2
   823  0784                     l927:	
   824                           
   825                           ;RAINBO-LPF.c: 114: }
   826                           ;RAINBO-LPF.c: 115: if (LPFInput[i] > max3) {
   827  0784  087D               	movf	_i,w
   828  0785  3E3B               	addlw	(low (_LPFInput| 0))& (0+255)
   829  0786  0086               	movwf	6
   830  0787  0187               	clrf	7
   831  0788  0801               	movf	1,w
   832  0789  0235               	subwf	_max3,w
   833  078A  1803               	skipnc
   834  078B  2F98               	goto	l933
   835                           
   836                           ;RAINBO-LPF.c: 116: max4 = max3;
   837  078C  0835               	movf	_max3,w
   838  078D  00A3               	movwf	??_main
   839  078E  0823               	movf	??_main,w
   840  078F  00B4               	movwf	_max4
   841                           
   842                           ;RAINBO-LPF.c: 117: max3 = LPFInput[i];
   843  0790  087D               	movf	_i,w
   844  0791  3E3B               	addlw	(low (_LPFInput| 0))& (0+255)
   845  0792  0086               	movwf	6
   846  0793  0187               	clrf	7
   847  0794  0801               	movf	1,w
   848  0795  00A3               	movwf	??_main
   849  0796  0823               	movf	??_main,w
   850  0797  00B5               	movwf	_max3
   851  0798                     l933:	
   852                           
   853                           ;RAINBO-LPF.c: 118: }
   854                           ;RAINBO-LPF.c: 119: if (LPFInput[i] > max4) {
   855  0798  087D               	movf	_i,w
   856  0799  3E3B               	addlw	(low (_LPFInput| 0))& (0+255)
   857  079A  0086               	movwf	6
   858  079B  0187               	clrf	7
   859  079C  0801               	movf	1,w
   860  079D  0234               	subwf	_max4,w
   861  079E  1803               	skipnc
   862  079F  2FA8               	goto	l937
   863                           
   864                           ;RAINBO-LPF.c: 120: max4 = LPFInput[i];
   865  07A0  087D               	movf	_i,w
   866  07A1  3E3B               	addlw	(low (_LPFInput| 0))& (0+255)
   867  07A2  0086               	movwf	6
   868  07A3  0187               	clrf	7
   869  07A4  0801               	movf	1,w
   870  07A5  00A3               	movwf	??_main
   871  07A6  0823               	movf	??_main,w
   872  07A7  00B4               	movwf	_max4
   873  07A8                     l937:	
   874  07A8  3001               	movlw	1
   875  07A9  00A3               	movwf	??_main
   876  07AA  0823               	movf	??_main,w
   877  07AB  07FD               	addwf	_i,f
   878  07AC  300A               	movlw	10
   879  07AD  027D               	subwf	_i,w
   880  07AE  1C03               	skipc
   881  07AF  2F50               	goto	l915
   882  07B0                     l941:	
   883                           
   884                           ;RAINBO-LPF.c: 121: }
   885                           ;RAINBO-LPF.c: 122: }
   886                           ;RAINBO-LPF.c: 123: LPFAvg = (max1 + max2 + max3 + max4) / 4;
   887  07B0  3004               	movlw	4
   888  07B1  00F0               	movwf	___awdiv@divisor
   889  07B2  3000               	movlw	0
   890  07B3  00F1               	movwf	___awdiv@divisor+1
   891  07B4  0834               	movf	_max4,w
   892  07B5  00A3               	movwf	??_main
   893  07B6  01A4               	clrf	??_main+1
   894  07B7  0835               	movf	_max3,w
   895  07B8  00A5               	movwf	??_main+2
   896  07B9  01A6               	clrf	??_main+3
   897  07BA  0837               	movf	_max1,w
   898  07BB  0736               	addwf	_max2,w
   899  07BC  00A7               	movwf	??_main+4
   900  07BD  01A8               	clrf	??_main+5
   901  07BE  0DA8               	rlf	??_main+5,f
   902  07BF  0825               	movf	??_main+2,w
   903  07C0  0727               	addwf	??_main+4,w
   904  07C1  00A9               	movwf	??_main+6
   905  07C2  0826               	movf	??_main+3,w
   906  07C3  3D28               	addwfc	??_main+5,w
   907  07C4  00AA               	movwf	??_main+7
   908  07C5  0823               	movf	??_main,w
   909  07C6  0729               	addwf	??_main+6,w
   910  07C7  00F2               	movwf	___awdiv@dividend
   911  07C8  0824               	movf	??_main+1,w
   912  07C9  3D2A               	addwfc	??_main+7,w
   913  07CA  00F3               	movwf	___awdiv@dividend+1
   914  07CB  3186  2646  3187   	fcall	___awdiv
   915  07CE  0870               	movf	?___awdiv,w
   916  07CF  0020               	movlb	0	; select bank0
   917  07D0  00AB               	movwf	??_main+8
   918  07D1  082B               	movf	??_main+8,w
   919  07D2  00B9               	movwf	_LPFAvg
   920                           
   921                           ;RAINBO-LPF.c: 126: }
   922                           ;RAINBO-LPF.c: 127: lights(LPFAvg, maxLEDs);
   923  07D3  3000               	movlw	low (_maxLEDs| (0+32768))
   924  07D4  0084               	movwf	4
   925  07D5  3088               	movlw	high (_maxLEDs| (0+32768))
   926  07D6  0085               	movwf	5
   927  07D7  0800               	movf	0,w	;code access
   928  07D8  00A3               	movwf	??_main
   929  07D9  0823               	movf	??_main,w
   930  07DA  00F9               	movwf	lights@leds
   931  07DB  0839               	movf	_LPFAvg,w
   932  07DC  3186  2697  3187   	fcall	_lights
   933                           
   934                           ;RAINBO-LPF.c: 128: _delay((unsigned long)((10)*(32000000/4000.0)));
   935  07DF  3068               	movlw	104
   936  07E0  0020               	movlb	0	; select bank0
   937  07E1  00A3               	movwf	??_main
   938  07E2  30E4               	movlw	228
   939  07E3                     u647:	
   940  07E3  0B89               	decfsz	9,f
   941  07E4  2FE3               	goto	u647
   942  07E5  0BA3               	decfsz	??_main,f
   943  07E6  2FE3               	goto	u647
   944  07E7  0000               	nop
   945  07E8  2F20               	goto	l891
   946  07E9                     __end_of_main:	
   947                           
   948                           	psect	text1
   949  0697                     __ptext1:	
   950 ;; *************** function _lights *****************
   951 ;; Defined at:
   952 ;;		line 42 in file "RAINBO-LPF.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;  height          1    wreg     unsigned char 
   955 ;;  leds            1    9[COMMON] unsigned char 
   956 ;; Auto vars:     Size  Location     Type
   957 ;;  height          1    2[BANK0 ] unsigned char 
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, status,2, status,0, pclath, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   967 ;;      Params:         1       0       0       0
   968 ;;      Locals:         0       3       0       0
   969 ;;      Temps:          3       0       0       0
   970 ;;      Totals:         4       3       0       0
   971 ;;Total ram usage:        7 bytes
   972 ;; Hardware stack levels used:    1
   973 ;; Hardware stack levels required when called:    1
   974 ;; This function calls:
   975 ;;		___awdiv
   976 ;; This function is called by:
   977 ;;		_main
   978 ;; This function uses a non-reentrant model
   979 ;;
   980                           
   981                           
   982                           ;psect for function _lights
   983  0697                     _lights:	
   984                           
   985                           ;incstack = 0
   986                           ; Regs used in _lights: [wreg+status,2+status,0+pclath+cstack]
   987                           ;lights@height stored from wreg
   988  0697  0020               	movlb	0	; select bank0
   989  0698  00A2               	movwf	lights@height
   990                           
   991                           ;RAINBO-LPF.c: 43: if (height > 193) {
   992  0699  30C2               	movlw	194
   993  069A  0222               	subwf	lights@height,w
   994  069B  1C03               	skipc
   995  069C  2EB9               	goto	l851
   996                           
   997                           ;RAINBO-LPF.c: 44: if (height < 255) {
   998  069D  0A22               	incf	lights@height,w
   999  069E  1903               	btfsc	3,2
  1000  069F  2EB4               	goto	l849
  1001                           
  1002                           ;RAINBO-LPF.c: 45: height = (height / 2) - 97;
  1003  06A0  3002               	movlw	2
  1004  06A1  00F0               	movwf	___awdiv@divisor
  1005  06A2  3000               	movlw	0
  1006  06A3  00F1               	movwf	___awdiv@divisor+1
  1007  06A4  0822               	movf	lights@height,w
  1008  06A5  00FA               	movwf	??_lights
  1009  06A6  01FB               	clrf	??_lights+1
  1010  06A7  087A               	movf	??_lights,w
  1011  06A8  00F2               	movwf	___awdiv@dividend
  1012  06A9  087B               	movf	??_lights+1,w
  1013  06AA  00F3               	movwf	___awdiv@dividend+1
  1014  06AB  3186  2646  3186   	fcall	___awdiv
  1015  06AE  0870               	movf	?___awdiv,w
  1016  06AF  3E9F               	addlw	159
  1017  06B0  00FC               	movwf	??_lights+2
  1018  06B1  087C               	movf	??_lights+2,w
  1019  06B2  0020               	movlb	0	; select bank0
  1020  06B3  2EB7               	goto	L1
  1021  06B4                     l849:	
  1022                           ;RAINBO-LPF.c: 46: } else {
  1023                           
  1024                           
  1025                           ;RAINBO-LPF.c: 47: height = 30;
  1026  06B4  301E               	movlw	30
  1027  06B5  00FA               	movwf	??_lights
  1028  06B6  087A               	movf	??_lights,w
  1029  06B7                     L1:	
  1030  06B7  00A2               	movwf	lights@height
  1031                           
  1032                           ;RAINBO-LPF.c: 48: }
  1033                           ;RAINBO-LPF.c: 49: } else {
  1034  06B8  2EBA               	goto	l853
  1035  06B9                     l851:	
  1036                           
  1037                           ;RAINBO-LPF.c: 50: height = 0;
  1038  06B9  01A2               	clrf	lights@height
  1039  06BA                     l853:	
  1040  06BA  0879               	movf	lights@leds,w
  1041  06BB  1903               	btfsc	3,2
  1042  06BC  0008               	return
  1043                           
  1044                           ;RAINBO-LPF.c: 54: temp = (leds < height) ? green : 0;
  1045  06BD  0020               	movlb	0	; select bank0
  1046  06BE  0822               	movf	lights@height,w
  1047  06BF  0279               	subwf	lights@leds,w
  1048  06C0  1C03               	skipc
  1049  06C1  2EC5               	goto	l861
  1050  06C2  01A0               	clrf	_lights$65
  1051  06C3  01A1               	clrf	_lights$65+1
  1052  06C4  2ECC               	goto	l94
  1053  06C5                     l861:	
  1054  06C5  0845               	movf	_green,w
  1055  06C6  00FA               	movwf	??_lights
  1056  06C7  01FB               	clrf	??_lights+1
  1057  06C8  087A               	movf	??_lights,w
  1058  06C9  00A0               	movwf	_lights$65
  1059  06CA  087B               	movf	??_lights+1,w
  1060  06CB  00A1               	movwf	_lights$65+1
  1061  06CC                     l94:	
  1062  06CC  0820               	movf	_lights$65,w
  1063  06CD  00FA               	movwf	??_lights
  1064  06CE  087A               	movf	??_lights,w
  1065  06CF  00AE               	movwf	_temp
  1066                           
  1067                           ;RAINBO-LPF.c: 55: for (i = 8; i != 0; i--) {
  1068  06D0  3008               	movlw	8
  1069  06D1  00FA               	movwf	??_lights
  1070  06D2  087A               	movf	??_lights,w
  1071  06D3  00FD               	movwf	_i
  1072  06D4  087D               	movf	_i,w
  1073  06D5  1903               	btfsc	3,2
  1074  06D6  2EE3               	goto	l869
  1075  06D7                     l95:	
  1076  06D7  160C               	bsf	268,4	;# 
  1077  06D8  0000               	nop	;# 
  1078  06D9  1FAE               	btfss	_temp,7	;# 
  1079  06DA  120C               	bcf	268,4	;# 
  1080  06DB  0000               	nop	;# 
  1081  06DC  35AE               	lslf	_temp,f	;# 
  1082  06DD  120C               	bcf	268,4	;# 
  1083  06DE  3001               	movlw	1
  1084  06DF  02FD               	subwf	_i,f
  1085  06E0  087D               	movf	_i,w
  1086  06E1  1D03               	btfss	3,2
  1087  06E2  2ED7               	goto	l95
  1088  06E3                     l869:	
  1089                           
  1090                           ;RAINBO-LPF.c: 63: }
  1091                           ;RAINBO-LPF.c: 64: temp = red;
  1092  06E3  0020               	movlb	0	; select bank0
  1093  06E4  0833               	movf	_red,w
  1094  06E5  00FA               	movwf	??_lights
  1095  06E6  087A               	movf	??_lights,w
  1096  06E7  00AE               	movwf	_temp
  1097                           
  1098                           ;RAINBO-LPF.c: 65: for (i = 8; i != 0; i--) {
  1099  06E8  3008               	movlw	8
  1100  06E9  00FA               	movwf	??_lights
  1101  06EA  087A               	movf	??_lights,w
  1102  06EB  00FD               	movwf	_i
  1103  06EC  087D               	movf	_i,w
  1104  06ED  1903               	btfsc	3,2
  1105  06EE  2EFB               	goto	l877
  1106  06EF                     l97:	
  1107  06EF  160C               	bsf	268,4	;# 
  1108  06F0  0000               	nop	;# 
  1109  06F1  1FAE               	btfss	_temp,7	;# 
  1110  06F2  120C               	bcf	268,4	;# 
  1111  06F3  0000               	nop	;# 
  1112  06F4  35AE               	lslf	_temp,f	;# 
  1113  06F5  120C               	bcf	268,4	;# 
  1114  06F6  3001               	movlw	1
  1115  06F7  02FD               	subwf	_i,f
  1116  06F8  087D               	movf	_i,w
  1117  06F9  1D03               	btfss	3,2
  1118  06FA  2EEF               	goto	l97
  1119  06FB                     l877:	
  1120                           
  1121                           ;RAINBO-LPF.c: 73: }
  1122                           ;RAINBO-LPF.c: 74: temp = blue;
  1123  06FB  0020               	movlb	0	; select bank0
  1124  06FC  0832               	movf	_blue,w
  1125  06FD  00FA               	movwf	??_lights
  1126  06FE  087A               	movf	??_lights,w
  1127  06FF  00AE               	movwf	_temp
  1128                           
  1129                           ;RAINBO-LPF.c: 75: for (i = 8; i != 0; i--) {
  1130  0700  3008               	movlw	8
  1131  0701  00FA               	movwf	??_lights
  1132  0702  087A               	movf	??_lights,w
  1133  0703  00FD               	movwf	_i
  1134  0704  087D               	movf	_i,w
  1135  0705  1903               	btfsc	3,2
  1136  0706  2F13               	goto	l885
  1137  0707                     l99:	
  1138  0707  160C               	bsf	268,4	;# 
  1139  0708  0000               	nop	;# 
  1140  0709  1FAE               	btfss	_temp,7	;# 
  1141  070A  120C               	bcf	268,4	;# 
  1142  070B  0000               	nop	;# 
  1143  070C  35AE               	lslf	_temp,f	;# 
  1144  070D  120C               	bcf	268,4	;# 
  1145  070E  3001               	movlw	1
  1146  070F  02FD               	subwf	_i,f
  1147  0710  087D               	movf	_i,w
  1148  0711  1D03               	btfss	3,2
  1149  0712  2F07               	goto	l99
  1150  0713                     l885:	
  1151  0713  3001               	movlw	1
  1152  0714  02F9               	subwf	lights@leds,f
  1153  0715  2EBA               	goto	l853
  1154  0716                     __end_of_lights:	
  1155                           
  1156                           	psect	text2
  1157  0646                     __ptext2:	
  1158 ;; *************** function ___awdiv *****************
  1159 ;; Defined at:
  1160 ;;		line 6 in file "C:\Program Files\Microchip\xc8\v1.44\sources\common\awdiv.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;  divisor         2    0[COMMON] int 
  1163 ;;  dividend        2    2[COMMON] int 
  1164 ;; Auto vars:     Size  Location     Type
  1165 ;;  quotient        2    7[COMMON] int 
  1166 ;;  sign            1    6[COMMON] unsigned char 
  1167 ;;  counter         1    5[COMMON] unsigned char 
  1168 ;; Return value:  Size  Location     Type
  1169 ;;                  2    0[COMMON] int 
  1170 ;; Registers used:
  1171 ;;		wreg, status,2, status,0
  1172 ;; Tracked objects:
  1173 ;;		On entry : 0/0
  1174 ;;		On exit  : 0/0
  1175 ;;		Unchanged: 0/0
  1176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1177 ;;      Params:         4       0       0       0
  1178 ;;      Locals:         4       0       0       0
  1179 ;;      Temps:          1       0       0       0
  1180 ;;      Totals:         9       0       0       0
  1181 ;;Total ram usage:        9 bytes
  1182 ;; Hardware stack levels used:    1
  1183 ;; This function calls:
  1184 ;;		Nothing
  1185 ;; This function is called by:
  1186 ;;		_lights
  1187 ;;		_main
  1188 ;; This function uses a non-reentrant model
  1189 ;;
  1190                           
  1191                           
  1192                           ;psect for function ___awdiv
  1193  0646                     ___awdiv:	
  1194                           
  1195                           ;incstack = 0
  1196                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1197  0646  01F6               	clrf	___awdiv@sign
  1198  0647  1FF1               	btfss	___awdiv@divisor+1,7
  1199  0648  2E50               	goto	l773
  1200  0649  09F0               	comf	___awdiv@divisor,f
  1201  064A  09F1               	comf	___awdiv@divisor+1,f
  1202  064B  0AF0               	incf	___awdiv@divisor,f
  1203  064C  1903               	skipnz
  1204  064D  0AF1               	incf	___awdiv@divisor+1,f
  1205  064E  01F6               	clrf	___awdiv@sign
  1206  064F  0AF6               	incf	___awdiv@sign,f
  1207  0650                     l773:	
  1208  0650  1FF3               	btfss	___awdiv@dividend+1,7
  1209  0651  2E5B               	goto	l779
  1210  0652  09F2               	comf	___awdiv@dividend,f
  1211  0653  09F3               	comf	___awdiv@dividend+1,f
  1212  0654  0AF2               	incf	___awdiv@dividend,f
  1213  0655  1903               	skipnz
  1214  0656  0AF3               	incf	___awdiv@dividend+1,f
  1215  0657  3001               	movlw	1
  1216  0658  00F4               	movwf	??___awdiv
  1217  0659  0874               	movf	??___awdiv,w
  1218  065A  06F6               	xorwf	___awdiv@sign,f
  1219  065B                     l779:	
  1220  065B  01F7               	clrf	___awdiv@quotient
  1221  065C  01F8               	clrf	___awdiv@quotient+1
  1222  065D  0870               	movf	___awdiv@divisor,w
  1223  065E  0471               	iorwf	___awdiv@divisor+1,w
  1224  065F  1903               	btfsc	3,2
  1225  0660  2E8A               	goto	l801
  1226  0661  01F5               	clrf	___awdiv@counter
  1227  0662  0AF5               	incf	___awdiv@counter,f
  1228  0663                     l789:	
  1229  0663  1BF1               	btfsc	___awdiv@divisor+1,7
  1230  0664  2E6F               	goto	l791
  1231  0665  3001               	movlw	1
  1232  0666                     u355:	
  1233  0666  35F0               	lslf	___awdiv@divisor,f
  1234  0667  0DF1               	rlf	___awdiv@divisor+1,f
  1235  0668  0B89               	decfsz	9,f
  1236  0669  2E66               	goto	u355
  1237  066A  3001               	movlw	1
  1238  066B  00F4               	movwf	??___awdiv
  1239  066C  0874               	movf	??___awdiv,w
  1240  066D  07F5               	addwf	___awdiv@counter,f
  1241  066E  2E63               	goto	l789
  1242  066F                     l791:	
  1243  066F  3001               	movlw	1
  1244  0670                     u375:	
  1245  0670  35F7               	lslf	___awdiv@quotient,f
  1246  0671  0DF8               	rlf	___awdiv@quotient+1,f
  1247  0672  0B89               	decfsz	9,f
  1248  0673  2E70               	goto	u375
  1249  0674  0871               	movf	___awdiv@divisor+1,w
  1250  0675  0273               	subwf	___awdiv@dividend+1,w
  1251  0676  1D03               	skipz
  1252  0677  2E7A               	goto	u385
  1253  0678  0870               	movf	___awdiv@divisor,w
  1254  0679  0272               	subwf	___awdiv@dividend,w
  1255  067A                     u385:	
  1256  067A  1C03               	skipc
  1257  067B  2E81               	goto	l797
  1258  067C  0870               	movf	___awdiv@divisor,w
  1259  067D  02F2               	subwf	___awdiv@dividend,f
  1260  067E  0871               	movf	___awdiv@divisor+1,w
  1261  067F  3BF3               	subwfb	___awdiv@dividend+1,f
  1262  0680  1477               	bsf	___awdiv@quotient,0
  1263  0681                     l797:	
  1264  0681  3001               	movlw	1
  1265  0682                     u395:	
  1266  0682  36F1               	lsrf	___awdiv@divisor+1,f
  1267  0683  0CF0               	rrf	___awdiv@divisor,f
  1268  0684  0B89               	decfsz	9,f
  1269  0685  2E82               	goto	u395
  1270  0686  3001               	movlw	1
  1271  0687  02F5               	subwf	___awdiv@counter,f
  1272  0688  1D03               	btfss	3,2
  1273  0689  2E6F               	goto	l791
  1274  068A                     l801:	
  1275  068A  0876               	movf	___awdiv@sign,w
  1276  068B  1903               	btfsc	3,2
  1277  068C  2E92               	goto	l805
  1278  068D  09F7               	comf	___awdiv@quotient,f
  1279  068E  09F8               	comf	___awdiv@quotient+1,f
  1280  068F  0AF7               	incf	___awdiv@quotient,f
  1281  0690  1903               	skipnz
  1282  0691  0AF8               	incf	___awdiv@quotient+1,f
  1283  0692                     l805:	
  1284  0692  0878               	movf	___awdiv@quotient+1,w
  1285  0693  00F1               	movwf	?___awdiv+1
  1286  0694  0877               	movf	___awdiv@quotient,w
  1287  0695  00F0               	movwf	?___awdiv
  1288  0696  0008               	return
  1289  0697                     __end_of___awdiv:	
  1290                           
  1291                           	psect	text3
  1292  062A                     __ptext3:	
  1293 ;; *************** function _init *****************
  1294 ;; Defined at:
  1295 ;;		line 12 in file "RAINBO.c"
  1296 ;; Parameters:    Size  Location     Type
  1297 ;;		None
  1298 ;; Auto vars:     Size  Location     Type
  1299 ;;		None
  1300 ;; Return value:  Size  Location     Type
  1301 ;;                  1    wreg      void 
  1302 ;; Registers used:
  1303 ;;		wreg, status,2
  1304 ;; Tracked objects:
  1305 ;;		On entry : 0/0
  1306 ;;		On exit  : 0/0
  1307 ;;		Unchanged: 0/0
  1308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1309 ;;      Params:         0       0       0       0
  1310 ;;      Locals:         0       0       0       0
  1311 ;;      Temps:          0       0       0       0
  1312 ;;      Totals:         0       0       0       0
  1313 ;;Total ram usage:        0 bytes
  1314 ;; Hardware stack levels used:    1
  1315 ;; This function calls:
  1316 ;;		Nothing
  1317 ;; This function is called by:
  1318 ;;		_main
  1319 ;; This function uses a non-reentrant model
  1320 ;;
  1321                           
  1322                           
  1323                           ;psect for function _init
  1324  062A                     _init:	
  1325                           
  1326                           ;RAINBO.c: 16: OSCCON = 0b11110000;
  1327                           
  1328                           ;incstack = 0
  1329                           ; Regs used in _init: [wreg+status,2]
  1330  062A  30F0               	movlw	240
  1331  062B  0021               	movlb	1	; select bank1
  1332  062C  0099               	movwf	25	;volatile
  1333  062D                     l27:	
  1334                           ;RAINBO.c: 17: while(!PLLR);
  1335                           
  1336  062D  1F1A               	btfss	26,6	;volatile
  1337  062E  2E2D               	goto	l27
  1338                           
  1339                           ;RAINBO.c: 21: OPTION_REG = 0b00010000;
  1340  062F  3010               	movlw	16
  1341  0630  0095               	movwf	21	;volatile
  1342                           
  1343                           ;RAINBO.c: 23: PORTA = 0;
  1344  0631  0020               	movlb	0	; select bank0
  1345  0632  018C               	clrf	12	;volatile
  1346                           
  1347                           ;RAINBO.c: 24: LATA = 0;
  1348  0633  0022               	movlb	2	; select bank2
  1349  0634  018C               	clrf	12	;volatile
  1350                           
  1351                           ;RAINBO.c: 25: ANSELA = 0b00000011;
  1352  0635  3003               	movlw	3
  1353  0636  0023               	movlb	3	; select bank3
  1354  0637  008C               	movwf	12	;volatile
  1355                           
  1356                           ;RAINBO.c: 26: ADCON0 = 0b00000000;
  1357  0638  0021               	movlb	1	; select bank1
  1358  0639  019D               	clrf	29	;volatile
  1359                           
  1360                           ;RAINBO.c: 27: ADCON1 = 0b01100000;
  1361  063A  3060               	movlw	96
  1362  063B  009E               	movwf	30	;volatile
  1363                           
  1364                           ;RAINBO.c: 28: TRISA = 0b00001111;
  1365  063C  300F               	movlw	15
  1366  063D  008C               	movwf	12	;volatile
  1367                           
  1368                           ;RAINBO.c: 29: WPUA = 0b00001000;
  1369  063E  3008               	movlw	8
  1370  063F  0024               	movlb	4	; select bank4
  1371  0640  008C               	movwf	12	;volatile
  1372                           
  1373                           ;RAINBO.c: 31: WDTCON = 0b00001010;
  1374  0641  300A               	movlw	10
  1375  0642  0021               	movlb	1	; select bank1
  1376  0643  0097               	movwf	23	;volatile
  1377                           
  1378                           ;RAINBO.c: 35: INTCON = 0;
  1379  0644  018B               	clrf	11	;volatile
  1380  0645  0008               	return
  1381  0646                     __end_of_init:	
  1382                           
  1383                           	psect	text4
  1384  0616                     __ptext4:	
  1385 ;; *************** function _adConvert *****************
  1386 ;; Defined at:
  1387 ;;		line 29 in file "RAINBO-LPF.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;  chan            1    wreg     unsigned char 
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;  chan            1    0[COMMON] unsigned char 
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      unsigned char 
  1394 ;; Registers used:
  1395 ;;		wreg, status,2, status,0
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1401 ;;      Params:         0       0       0       0
  1402 ;;      Locals:         1       0       0       0
  1403 ;;      Temps:          0       0       0       0
  1404 ;;      Totals:         1       0       0       0
  1405 ;;Total ram usage:        1 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		_main
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _adConvert
  1416  0616                     _adConvert:	
  1417                           
  1418                           ;incstack = 0
  1419                           ; Regs used in _adConvert: [wreg+status,2+status,0]
  1420                           ;adConvert@chan stored from wreg
  1421  0616  00F0               	movwf	adConvert@chan
  1422                           
  1423                           ;RAINBO-LPF.c: 30: ADON = 1;
  1424  0617  0021               	movlb	1	; select bank1
  1425  0618  141D               	bsf	29,0	;volatile
  1426                           
  1427                           ;RAINBO-LPF.c: 31: ADCON0 = (ADCON0 & 0b10000011);
  1428  0619  081D               	movf	29,w	;volatile
  1429  061A  3983               	andlw	131
  1430  061B  009D               	movwf	29	;volatile
  1431                           
  1432                           ;RAINBO-LPF.c: 32: ADCON0 = (ADCON0 | chan);
  1433  061C  081D               	movf	29,w	;volatile
  1434  061D  0470               	iorwf	adConvert@chan,w
  1435  061E  009D               	movwf	29	;volatile
  1436                           
  1437                           ;RAINBO-LPF.c: 33: _delay((unsigned long)((2)*(32000000/4000000.0)));
  1438  061F  3005               	movlw	5
  1439  0620                     u657:	
  1440  0620  0B89               	decfsz	9,f
  1441  0621  2E20               	goto	u657
  1442  0622  0000               	nop
  1443                           
  1444                           ;RAINBO-LPF.c: 35: GO = 1;
  1445  0623  0021               	movlb	1	; select bank1
  1446  0624  149D               	bsf	29,1	;volatile
  1447  0625                     l79:	
  1448                           ;RAINBO-LPF.c: 36: while (GO);
  1449                           
  1450  0625  189D               	btfsc	29,1	;volatile
  1451  0626  2E25               	goto	l79
  1452                           
  1453                           ;RAINBO-LPF.c: 38: ADON = 0;
  1454  0627  101D               	bcf	29,0	;volatile
  1455                           
  1456                           ;RAINBO-LPF.c: 39: return (ADRESH);
  1457  0628  081C               	movf	28,w	;volatile
  1458  0629  0008               	return
  1459  062A                     __end_of_adConvert:	
  1460  007E                     btemp	set	126	;btemp
  1461  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    1
    Data        11
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     14      38
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lights
    _lights->___awdiv

Critical Paths under _main in BANK0

    _main->_lights

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                11    11      0    1305
                                              3 BANK0     11    11      0
                            ___awdiv
                          _adConvert
                               _init
                             _lights
 ---------------------------------------------------------------------------------
 (1) _lights                                               7     6      1     747
                                              9 COMMON     4     3      1
                                              0 BANK0      3     3      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     512
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adConvert                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   _adConvert
   _init
   _lights
     ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      34       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      E      26       6       47.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      34      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Fri Dec 01 17:17:31 2017

                      _i 007D              __CFG_CP$OFF 0000                       l27 062D  
                     l94 06CC                       l79 0625                       l95 06D7  
                     l97 06EF                       _GO 04E9                       l99 0707  
           ___awdiv@sign 0076                      LATA 010C                      l801 068A  
                    l805 0692                      l911 074B                      l921 076C  
                    l851 06B9                      l915 0750                      l907 0745  
                    l773 0650                      l861 06C5                      l853 06BA  
                    l933 0798                      l941 07B0                      l909 0747  
                    l791 066F                      l927 0784                      l849 06B4  
                    l937 07A8                      l779 065B                      l891 0720  
                    l797 0681                      l789 0663                      l885 0713  
                    l877 06FB                      l869 06E3             __CFG_CPD$OFF 0000  
                    u355 0666                      u375 0670                      u385 067A  
                    u395 0682                      u637 071A                      u647 07E3  
                    u657 0620                      _red 0033             __CFG_BORV$LO 0000  
                    wreg 0009             __CFG_LVP$OFF 0000                     _ADON 04E8  
                   _LATA 010C                     _PLLR 04D6                     _WPUA 020C  
           __CFG_WRT$OFF 0000                     _max1 0037                     _max2 0036  
                   _max3 0035                     _blue 0032                     _max4 0034  
                   _main 0716                     _init 062A                     _temp 002E  
                   fsr0h 0005                     fsr1h 0007                     indf0 0000  
                   fsr0l 0004                     indf1 0001                     fsr1l 0006  
                   btemp 007E                     start 0002            __CFG_IESO$OFF 0000  
          __CFG_PLLEN$ON 0000                    ?_main 0070                    ?_init 0070  
        __end_of___awdiv 0697          ___awdiv@divisor 0070          ___awdiv@counter 0075  
                  _PORTA 000C                    _TRISA 008C            __CFG_PWRTE$ON 0000  
         __CFG_FCMEN$OFF 0000          __end_of_maxLEDs 0801                    _green 0045  
         __CFG_BOREN$OFF 0000                    status 0003                    wtemp0 007E  
         __CFG_MCLRE$OFF 0000          __initialization 07E9             __end_of_main 07E9  
           __end_of_init 0646                   ??_main 0023                   ??_init 0070  
                 _ADCON0 009D                   _ADCON1 009E                   _ADRESH 009C  
       ___awdiv@dividend 0072                   _ANSELA 018C                   _INTCON 000B  
                 _LPFAvg 0039                   _OSCCON 0099                   _WDTCON 0097  
              ??___awdiv 0074           __CFG_STVREN$ON 0000                   _lights 0697  
       ___awdiv@quotient 0077                   _tempIN 0038       __size_of_adConvert 0014  
__end_of__initialization 07FD           __pcstackCOMMON 0070             __pidataBANK0 060B  
             __pbssBANK0 002E               __pmaintext 0716        __end_of_adConvert 062A  
                ?_lights 0079             lights@height 0022                  ___awdiv 0646  
        __size_of_lights 007F                  _main$73 002C                  __ptext1 0697  
                __ptext2 0646                  __ptext3 062A                  __ptext4 0616  
                _maxLEDs 0800                  _lastVal 003A                  _tempRed 0031  
                clrloop0 0600     end_of_initialization 07FD                  init_ram 0605  
                initloop 0606         __CFG_FOSC$INTOSC 0000           __end_of_lights 0716  
    start_initialization 07E9               lights@leds 0079              __pdataBANK0 003B  
               ??_lights 007A                _adConvert 0616              __pbssCOMMON 007D  
              ___latbits 0001            __pcstackBANK0 0020                 ?___awdiv 0070  
             ?_adConvert 0070                _lights$65 0020         __CFG_WDTE$SWDTEN 0000  
              clear_ram0 05FF                _tempGreen 0030                 _LPFInput 003B  
       __size_of___awdiv 0051              ??_adConvert 0070            __size_of_main 00D3  
          __size_of_init 001C                 _tempBlue 002F        __CFG_CLKOUTEN$OFF 0000  
          adConvert@chan 0070            __pstringtext1 0800               _OPTION_REG 0095  
